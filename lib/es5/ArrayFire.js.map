{"version":3,"sources":["../es6/ArrayFire.js"],"names":["os","require","_","fastcall","Promise","Library","device","errors","enums","unified","AFArray","assert","defOptions","async","chainable","created","ArrayFire","options","Error","Object","freeze","defaults","_lib","getLibName","_makeLibOptions","define","release","values","value","isObject","keys","key","curr","TypeError","init","call","done","undefined","noop","Caller","prototype","_asChainable","process","apply","arguments","then","verify","result","caller","callMode","sync","syncMode","lock","backend","dtype","func","errs","map","arg","idx","resolve","catch","push","err","length","ArrayFireChainedError","args","module","exports","plat","platform","isWin","isOSX","postfix","prefix"],"mappings":"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","file":"ArrayFire.js","sourcesContent":["'use strict';\nconst os = require('os');\nconst _ = require('lodash');\nconst fastcall = require('fastcall');\nconst Promise = require('bluebird');\nconst Library = fastcall.Library;\nconst device = require('./device');\nconst errors = require('./errors');\nconst enums = require('./enums');\nconst unified = require('./unified');\nconst AFArray = require('./AFArray');\nconst assert = require('assert');\n\nconst defOptions = {\n    async: false,\n    chainable: true\n};\n\nlet created = false;\n\nclass ArrayFire {\n    constructor(options) {\n        if (created) {\n            throw new Error('Only one instance of ArrayFire class allowed.');\n        }\n\n        this.options = Object.freeze(_.defaults(options, defOptions));\n        this._lib = new Library(getLibName(), this._makeLibOptions());\n\n        device(this);\n        unified(this);\n        AFArray.define(this);\n\n        created = true;\n    }\n\n    release() {\n        this._lib.release();\n        created = false;\n    }\n\n    get backend() {\n        return enums.backend;\n    }\n\n    get dtype() {\n        return enums.dtype;\n    }\n\n    enumToString(values, value) {\n        assert(_.isObject(values), 'Argument \"values\" is not an object.');\n\n        for (const key of _.keys(values)) {\n            const curr = values[key];\n            if (curr === value) {\n                return key;\n            }\n        }\n\n        throw new TypeError(`Value \"${ value }\" not fuond on enum values.`);\n    }\n\n    _makeFunction(init, call, done) {\n        if (done === undefined) {\n            done = call;\n            call = init;\n            init = _.noop;\n        }\n\n        const Caller = function () {\n            init.call(this);\n        };\n\n        Caller.prototype.call = call;\n\n        Caller.prototype.done = done || _.noop;\n\n        if (this.options.async) {\n            if (this.options.chainable) {\n                Caller.prototype.call = ArrayFire._asChainable(call);\n            }\n            Caller.prototype.process = function () {\n                return this.call.apply(this, arguments)\n                .then(result => {\n                    errors.verify(result);\n                    return this.done(result);\n                });\n            };\n            return function () {\n                const caller = new Caller();\n                return caller.process.apply(caller, arguments);\n            };\n        }\n        else {\n            Caller.prototype.process = function () {\n                const result = this.call.apply(this, arguments);\n                errors.verify(result);\n                return this.done(result);\n            };\n            const caller = new Caller();\n            return function () {\n                return caller.process.apply(caller, arguments);\n            };\n        }\n    }\n\n    static _asChainable(func) {\n        return function () {\n            const errs = [];\n            return Promise.map(arguments, (arg, idx) => {\n                return Promise.resolve(arg)\n                .catch(err => {\n                    errs.push(err);\n                    return null;\n                });\n            })\n            .then(args => {\n                if (errs.length) {\n                    throw new errors.ArrayFireChainedError(errs);\n                }\n                return func.apply(this, args);\n            });\n        };\n    }\n\n    _makeLibOptions() {\n        return {\n            callMode: this.options.async ? Library.callMode.async : Library.callMode.sync,\n            syncMode: Library.syncMode.lock // TODO: benchmark for this\n        };\n    }\n}\n\nmodule.exports = ArrayFire;\n\nfunction getLibName() {\n    const plat = os.platform();\n    const isWin = plat === 'win32';\n    const isOSX = plat === 'darwin';\n    let postfix = '';\n    let prefix = '';\n    if (isOSX) {\n        postfix = '.dynlib';\n    }\n    else if (!isWin) {\n        postfix = '.so';\n    }\n    if (!isWin) {\n        prefix = 'lib';\n    }\n    return prefix + 'af' + postfix;\n}"]}