{"version":3,"sources":["../es6/ArrayFire.js"],"names":["os","require","_","fastcall","Promise","Library","device","errors","enums","unified","AFArray","assert","typedefs","Dim4","Idx","Seq","Col","Cols","Row","Rows","ref","defOptions","async","chainable","span","Symbol","created","dtypeMap","ArrayFire","options","Error","Object","freeze","defaults","_lib","getLibName","_makeLibOptions","_batch","define","release","values","value","isObject","keys","key","curr","TypeError","array","Int8Array","dtype","u8","Uint8Array","Uint8ClampedArray","Int16Array","s16","Uint16Array","u16","Int32Array","s32","Uint32Array","u32","Float32Array","f32","Float64Array","f64","type","types","float","c32","double","c64","b8","bool","uint32","uint8","s64","int64","u64","uint64","int16","uint16","init","call","done","verify","isPlainObject","args","noop","undefined","Caller","prototype","_asChainable","process","apply","arguments","then","result","caller","callMode","sync","syncMode","lock","scope","backend","source","func","errs","map","arg","idx","resolve","catch","push","err","length","ArrayFireChainedError","module","exports","plat","platform","isWin","isOSX","postfix","prefix"],"mappings":"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","file":"ArrayFire.js","sourcesContent":["'use strict';\nconst os = require('os');\nconst _ = require('lodash');\nconst fastcall = require('fastcall');\nconst Promise = require('bluebird');\nconst Library = fastcall.Library;\nconst device = require('./device');\nconst errors = require('./errors');\nconst enums = require('./enums');\nconst unified = require('./unified');\nconst AFArray = require('./AFArray');\nconst assert = require('assert');\nconst typedefs = require('./typedefs');\nconst Dim4 = require('./Dim4');\nconst Idx = require('./Idx');\nconst Seq = require('./Seq');\nconst Col = require('./Col');\nconst Cols = require('./Cols');\nconst Row = require('./Row');\nconst Rows = require('./Rows');\nconst ref = fastcall.ref;\n\nconst defOptions = {\n    async: false,\n    chainable: true\n};\n\nconst span = Symbol('span');\n\nlet created = false;\n\nlet dtypeMap = null;\n\nclass ArrayFire {\n    constructor(options) {\n        if (created) {\n            throw new Error('Only one instance of ArrayFire class allowed.');\n        }\n\n        this.options = Object.freeze(_.defaults(options, defOptions));\n        this._lib = new Library(getLibName(), this._makeLibOptions());\n        this._batch = false;\n\n        typedefs.define(this);\n        Dim4.define(this);\n        Idx.define(this);\n        Seq.define(this);\n        Col.define(this);\n        Cols.define(this);\n        Row.define(this);\n        Rows.define(this);\n        device(this);\n        unified(this);\n        AFArray.define(this);\n\n        created = true;\n    }\n\n    release() {\n        this._lib.release();\n        created = false;\n    }\n\n    get scope() {\n        return fastcall.scope;\n    }\n\n    get span() {\n        return span;\n    }\n\n    get end() {\n        return -1;\n    }\n\n    get backend() {\n        return enums.backend;\n    }\n\n    get dtype() {\n        return enums.dtype;\n    }\n\n    get source() {\n        return enums.source;\n    }\n\n    enumToString(values, value) {\n        assert(_.isObject(values), 'Argument \"values\" is not an object.');\n\n        for (const key of _.keys(values)) {\n            const curr = values[key];\n            if (curr === value) {\n                return key;\n            }\n        }\n\n        throw new TypeError(`Value \"${ value }\" not fuond on enum values.`);\n    }\n\n    getDTypeOfTypedArray(array) {\n        if (array instanceof Int8Array) {\n            return enums.dtype.u8;\n        }\n        if (array instanceof Uint8Array) {\n            return enums.dtype.u8;\n        }\n        if (array instanceof Uint8ClampedArray) {\n            return enums.dtype.u8;\n        }\n        if (array instanceof Int16Array) {\n            return enums.dtype.s16;\n        }\n        if (array instanceof Uint16Array) {\n            return enums.dtype.u16;\n        }\n        if (array instanceof Int32Array) {\n            return enums.dtype.s32;\n        }\n        if (array instanceof Uint32Array) {\n            return enums.dtype.u32;\n        }\n        if (array instanceof Float32Array) {\n            return enums.dtype.f32;\n        }\n        if (array instanceof Float64Array) {\n            return enums.dtype.f64;\n        }\n        throw new TypeError('Argument \"array\" is not a typed array.');\n    }\n\n    dtypeToRefType(type) {\n        switch (type) {\n            case enums.dtype.f32:\n                return ref.types.float;\n            case enums.dtype.c32:\n                throw new Error('Complext types are not supported yet.');\n            case enums.dtype.f64:\n                return ref.types.double;\n            case enums.dtype.c64:\n                throw new Error('Complext types are not supported yet.');\n            case enums.dtype.b8:\n                return ref.types.bool;\n            case enums.dtype.s32:\n                return ref.types.uint32;\n            case enums.dtype.u32:\n                return ref.types.uint32;\n            case enums.dtype.u8:\n                return ref.types.uint8;\n            case enums.dtype.s64:\n                return ref.types.int64;\n            case enums.dtype.u64:\n                return ref.types.uint64;\n            case enums.dtype.s16:\n                return ref.types.int16;\n            case enums.dtype.u16:\n                return ref.types.uint16;\n            default:\n                throw new TypeError(`Argument value \"${ type }\" is not a valid dtype.`);\n        }\n    }\n\n    _makeFunction(init, call, done, verify = true) {\n        if (_.isPlainObject(init)) {\n            const args = init;\n            init = args.init || _.noop;\n            call = args.call;\n            done = args.done;\n            verify = args.verify === undefined ? true : args.verify;\n        }\n        else if (done === undefined) {\n            done = call;\n            call = init;\n            init = _.noop;\n        }\n\n        const Caller = function () {\n            init.call(this);\n        };\n\n        Caller.prototype.call = call;\n\n        Caller.prototype.done = done || _.noop;\n\n        if (this.options.async) {\n            if (this.options.chainable) {\n                Caller.prototype.call = ArrayFire._asChainable(call);\n            }\n            Caller.prototype.process = function () {\n                return this.call.apply(this, arguments)\n                .then(result => {\n                    if (verify) {\n                        errors.verify(result);\n                    }\n                    return this.done(result);\n                });\n            };\n            return function () {\n                const caller = new Caller();\n                return caller.process.apply(caller, arguments);\n            };\n        }\n        else {\n            Caller.prototype.process = function () {\n                const result = this.call.apply(this, arguments);\n                if (verify) {\n                    errors.verify(result);\n                }\n                return this.done(result);\n            };\n            const caller = new Caller();\n            return function () {\n                return caller.process.apply(caller, arguments);\n            };\n        }\n    }\n\n    static _asChainable(func) {\n        return function () {\n            const errs = [];\n            return Promise.map(arguments, (arg, idx) => {\n                return Promise.resolve(arg)\n                .catch(err => {\n                    errs.push(err);\n                    return null;\n                });\n            })\n            .then(args => {\n                if (errs.length) {\n                    throw new errors.ArrayFireChainedError(errs);\n                }\n                return func.apply(this, args);\n            });\n        };\n    }\n\n    _makeLibOptions() {\n        return {\n            callMode: this.options.async ? Library.callMode.async : Library.callMode.sync,\n            syncMode: Library.syncMode.lock // TODO: benchmark for this\n        };\n    }\n}\n\nmodule.exports = ArrayFire;\n\nfunction getLibName() {\n    const plat = os.platform();\n    const isWin = plat === 'win32';\n    const isOSX = plat === 'darwin';\n    let postfix = '';\n    let prefix = '';\n    if (isOSX) {\n        postfix = '.dynlib';\n    }\n    else if (!isWin) {\n        postfix = '.so';\n    }\n    if (!isWin) {\n        prefix = 'lib';\n    }\n    return prefix + 'af' + postfix;\n}"]}