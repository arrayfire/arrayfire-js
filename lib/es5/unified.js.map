{"version":3,"sources":["../es6/unified.js"],"names":["fastcall","require","ref","module","exports","af","lib","_lib","intf","interface","declare","getActiveBackend","_makeFunction","res","alloc","types","int","af_get_active_backend","deref","getAvailableBackends","af_get_available_backends","getBackendCount","uint","af_get_backend_count","setBackend","id","af_set_backend"],"mappings":"AAAA;;AACA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,MAAMF,SAASE,GAArB;;AAEAC,OAAOC,OAAP,GAAiB,UAAUC,EAAV,EAAc;AAC3B,QAAMC,MAAMD,GAAGE,IAAf;AACA,QAAMC,OAAOF,IAAIG,SAAjB;;AAEA;;AAEAH,QAAII,OAAJ,CAAY,yCAAZ;;AAEAL,OAAGM,gBAAH,GAAsBN,GAAGO,aAAH,CAClB,YAAY;AACR,aAAKC,GAAL,GAAWX,IAAIY,KAAJ,CAAUZ,IAAIa,KAAJ,CAAUC,GAApB,CAAX;AACH,KAHiB,EAIlB,YAAY;AACR,eAAOR,KAAKS,qBAAL,CAA2B,KAAKJ,GAAhC,CAAP;AACH,KANiB,EAOlB,YAAY;AACR,eAAO,KAAKA,GAAL,CAASK,KAAT,EAAP;AACH,KATiB,CAAtB;;AAWA;;AAEAZ,QAAII,OAAJ,CAAY,6CAAZ;;AAEAL,OAAGc,oBAAH,GAA0Bd,GAAGO,aAAH,CACtB,YAAY;AACR,aAAKC,GAAL,GAAWX,IAAIY,KAAJ,CAAUZ,IAAIa,KAAJ,CAAUC,GAApB,CAAX;AACH,KAHqB,EAItB,YAAY;AACR,eAAOR,KAAKY,yBAAL,CAA+B,KAAKP,GAApC,CAAP;AACH,KANqB,EAOtB,YAAY;AACR,eAAO,KAAKA,GAAL,CAASK,KAAT,EAAP;AACH,KATqB,CAA1B;;AAWA;;AAEAZ,QAAII,OAAJ,CAAY,yCAAZ;;AAEAL,OAAGgB,eAAH,GAAqBhB,GAAGO,aAAH,CACjB,YAAY;AACR,aAAKC,GAAL,GAAWX,IAAIY,KAAJ,CAAUZ,IAAIa,KAAJ,CAAUO,IAApB,CAAX;AACH,KAHgB,EAIjB,YAAY;AACR,eAAOd,KAAKe,oBAAL,CAA0B,KAAKV,GAA/B,CAAP;AACH,KANgB,EAOjB,YAAY;AACR,eAAO,KAAKA,GAAL,CAASK,KAAT,EAAP;AACH,KATgB,CAArB;;AAWA;;AAEAZ,QAAII,OAAJ,CAAY,kCAAZ;;AAEAL,OAAGmB,UAAH,GAAgBnB,GAAGO,aAAH,CACZ,UAAUa,EAAV,EAAc;AACV,eAAOjB,KAAKkB,cAAL,CAAoBD,EAApB,CAAP;AACH,KAHW,CAAhB;;AAKA;AACH,CA3DD","file":"unified.js","sourcesContent":["'use strict';\nconst fastcall = require('fastcall');\nconst ref = fastcall.ref;\n\nmodule.exports = function (af) {\n    const lib = af._lib;\n    const intf = lib.interface;\n\n    // getActiveBackend\n\n    lib.declare('int af_get_active_backend(int* backend)');\n\n    af.getActiveBackend = af._makeFunction(\n        function () {\n            this.res = ref.alloc(ref.types.int);\n        },\n        function () {\n            return intf.af_get_active_backend(this.res);\n        },\n        function () {\n            return this.res.deref();\n        });\n\n    // getAvailableBackends\n\n    lib.declare('int af_get_available_backends(int* backend)');\n\n    af.getAvailableBackends = af._makeFunction(\n        function () {\n            this.res = ref.alloc(ref.types.int);\n        },\n        function () {\n            return intf.af_get_available_backends(this.res);\n        },\n        function () {\n            return this.res.deref();\n        });\n\n    // getBackendCount\n\n    lib.declare('int af_get_backend_count(uint* backend)');\n\n    af.getBackendCount = af._makeFunction(\n        function () {\n            this.res = ref.alloc(ref.types.uint);\n        },\n        function () {\n            return intf.af_get_backend_count(this.res);\n        },\n        function () {\n            return this.res.deref();\n        });\n\n    // setBackend\n\n    lib.declare('int af_set_backend(int deviceId)');\n\n    af.setBackend = af._makeFunction(\n        function (id) {\n            return intf.af_set_backend(id);\n        });\n\n    // TODO: getBackendId, getDeviceId for array\n};"]}