{"version":3,"sources":["../es6/AFArray.js"],"names":["fastcall","require","ref","errors","assert","Disposable","typedefs","DimTArray","Dim4","longlong","types","Promise","async","coroutine","ArrayType","arrayIndexing","_","helpers","AFArray","af","lib","_lib","intf","interface","declare","retainArray","_makeFunction","res","alloc","handleType","array","af_retain_array","getHandle","deref","releaseArray","af_release_array","createHandle","dims","type","len","ndims","af_create_handle","buffer","createArray","data","dtype","f32","af_create_array","toBuffer","err","TypeError","deviceArray","Buffer","isBuffer","af_device_array","argsLen","arguments","length","firstArg","isArray","dim4","isTypedArray","getDTypeOfTypedArray","secondArg","moddims","thirdArg","source","host","index","isNumber","makeBufferFromJSArray","jsArray","dtypeToRefType","buff","size","i","set","u16","handle","getDims","n","dim0","slice","dim1","dim2","dim3","af_get_dims","getDataPtr","ptr","af_get_data_ptr","getType","outType","uint","af_get_type","getRefType","getNumdims","outNum","af_get_numdims","getElements","outElems","af_get_elements","isEmpty","outEmpty","bool","af_is_empty","hasMultiEval","multiEvalEmu","isSymbolExists","arrays","af_eval","arr","eval","pointers","PointerArray","Math","min","af_eval_multiple","options","_hostArrayType","_host","_makeHost","_get","_makeGet","apply","args","self","rhs","assign","newHandle","dispose","resetDisposable","refType","HostArray","elements","module","exports"],"mappings":"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","file":"AFArray.js","sourcesContent":["'use strict';\nconst fastcall = require('fastcall');\nconst ref = fastcall.ref;\nconst errors = require('./errors');\nconst assert = require('assert');\nconst Disposable = fastcall.Disposable;\nconst typedefs = require('./typedefs');\nconst DimTArray = typedefs.DimTArray;\nconst Dim4 = require('./Dim4');\nconst longlong = ref.types.longlong;\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\nconst ArrayType = fastcall.ArrayType;\nconst arrayIndexing = require('./arrayIndexing');\nconst _ = require('lodash');\nconst helpers = require('./helpers');\n\nclass AFArray extends Disposable {\n    static define(af) {\n        const lib = af._lib;\n        const intf = lib.interface;\n\n        // retainArray\n\n        lib.declare('int af_retain_array(void** outArr, void* arr)');\n\n        af.retainArray = af._makeFunction(\n            function () {\n                this.res = ref.alloc(typedefs.handleType);\n            },\n            function (array) {\n                return intf.af_retain_array(this.res, helpers.getHandle(array));\n            },\n            function () {\n                return ref.deref(this.res);\n            });\n\n        // releaseArray\n\n        lib.declare('int af_release_array(void* arr)');\n\n        af.releaseArray = af._makeFunction(\n            function (array) {\n                return intf.af_release_array(helpers.getHandle(array));\n            });\n\n        // createHandle\n\n        lib.declare('int af_create_handle(void** outArr, uint ndims, longlong* dims, int type)');\n\n        af.createHandle = af._makeFunction(\n            function () {\n                this.res = ref.alloc(typedefs.handleType);\n            },\n            function (dims = null, type = 0) {\n                let len = dims ? dims.ndims : 0;\n                return intf.af_create_handle(this.res, len, dims.buffer, type);\n            },\n            function () {\n                return ref.deref(this.res);\n            });\n\n        // createArray\n\n        lib.declare('int af_create_array(void** outArr, void* data, uint ndims, longlong* dims, int type)');\n\n        af.createArray = af._makeFunction(\n            function () {\n                this.res = ref.alloc(typedefs.handleType);\n            },\n            function (data, dims, type = af.dtype.f32) {\n                let len = dims ? dims.ndims : 0;\n                try {\n                    return intf.af_create_array(this.res, helpers.toBuffer(data), len, dims.buffer, type);\n                }\n                catch (err) {\n                    if (err instanceof TypeError) {\n                        throw new TypeError('Argument \"data\" is not a Buffer.');\n                    }\n                    throw err;\n                }\n            },\n            function () {\n                return ref.deref(this.res);\n            });\n\n        // deviceArray\n\n        lib.declare('int af_device_array(void** outArr, void* data, uint ndims, longlong* dims, int type)');\n\n        af.deviceArray = af._makeFunction(\n            function () {\n                this.res = ref.alloc(typedefs.handleType);\n            },\n            function (data, dims, type = 0) {\n                let len = dims ? dims.ndims : 0;\n                assert(Buffer.isBuffer(data), 'Argument \"data\" is not a Buffer.');\n                return intf.af_device_array(this.res, data, len, dims.buffer, type);\n            },\n            function () {\n                return ref.deref(this.res);\n            });\n\n        // ctors\n\n        af.array = af._makeFunction(\n            function () {\n                const argsLen = arguments.length;\n\n                // array()\n                if (argsLen === 0) {\n                    return intf.createHandle();\n                }\n\n                const firstArg = arguments[0];\n\n                if (Buffer.isBuffer(firstArg)) {\n                    // array(handle)\n                    return firstArg;\n                }\n\n                if (_.isArray(firstArg)) {\n                    return af.createArray(firstArg, af.dim4(firstArg.length));\n                }\n\n                if (_.isTypedArray(firstArg)) {\n                    return af.createArray(firstArg, af.dim4(firstArg.length), af.getDTypeOfTypedArray(firstArg));\n                }\n\n                if (firstArg instanceof AFArray) {\n                    if (argsLen === 1) {\n                        // array(otherArray)\n                        return af.retainArray(firstArg);\n                    }\n                    else {\n                        // array(otherArray, dims...)\n                        const secondArg = arguments[1];\n                        assert(secondArg instanceof Dim4, 'Second argument is not a dimension.');\n                        return af.moddims(firstArg, arguments[1]);\n                    }\n                }\n\n                const dims = af.dim4(firstArg);\n\n                assert(dims.ndims > 0, 'First argument is not a dimension.');\n\n                if (argsLen === 1) {\n                    // array(dims..., f32)\n                    return af.createHandle(dims, af.dtype.f32);\n                }\n\n                let secondArg = arguments[1];\n                let thirdArg = argsLen >= 3 ? arguments[2] : null;\n\n                if (Buffer.isBuffer(secondArg)) {\n                    let type = af.dtype.f32;\n                    let source = af.source.host;\n                    let index = 2;\n                    if (index < argsLen) {\n                        type = arguments[index];\n                        index++;\n                        if (index < argsLen) {\n                            source = arguments[index];\n                        }\n                    }\n                    // array(dims..., ptr, [type[, source]])\n                    if (source === af.source.host) {\n                        return af.createArray(secondArg, dims, type);\n                    }\n                    return af.deviceArray(secondArg, dims, type);\n                }\n\n                if (_.isArray(secondArg)) {\n                    if (_.isNumber(thirdArg)) {\n                        return af.createArray(makeBufferFromJSArray(secondArg, thirdArg), dims, thirdArg);\n                    }\n                    return af.createArray(secondArg, dims);\n                }\n\n                if (_.isTypedArray(secondArg)) {\n                    if (_.isNumber(thirdArg)) {\n                        return af.createArray(makeBufferFromJSArray(secondArg, thirdArg), dims, thirdArg);\n                    }\n                    return af.createArray(secondArg, dims, af.getDTypeOfTypedArray(secondArg));\n                }\n\n                function makeBufferFromJSArray(jsArray, dtype) {\n                    const len = jsArray.length;\n                    const type = af.dtypeToRefType(dtype);\n                    const buff = new Buffer(len * type.size);\n                    for (let i = 0; i < len; i++) {\n                        type.set(buff, i * type.size, jsArray[i]);\n                    }\n                    return buff;\n                }\n\n                // array(dims...[, type])\n                assert(secondArg >= 0 && secondArg <= af.dtype.u16, 'Second argument is not a dtype.');\n                return af.createHandle(dims, secondArg);\n            },\n            function (handle) {\n                return new AFArray(af, handle);\n            });\n\n        // getDims\n\n        lib.declare('int af_get_dims(longlong* dim0, longlong* dim1, longlong* dim2, longlong* dim3, void* arr)');\n\n        af.getDims = af._makeFunction(\n            function () {\n                this.dims = null;\n                this.n = -1;\n            },\n            function (array, n = -1) {\n                this.dims = new Dim4();\n                this.n = n;\n                const buff = this.dims.buffer;\n                const dim0 = buff.slice(0);\n                const dim1 = buff.slice(longlong.size);\n                const dim2 = buff.slice(longlong.size * 2);\n                const dim3 = buff.slice(longlong.size * 3);\n                return intf.af_get_dims(dim0, dim1, dim2, dim3, helpers.getHandle(array));\n            },\n            function () {\n                const n = this.n;\n                if (n >= 0 && n < 4) {\n                    return this.dims[n];\n                }\n                return this.dims;\n            });\n\n        // getDataPtr\n\n        lib.declare('int af_get_data_ptr(void* ptr, void* arr)');\n\n        af.getDataPtr = af._makeFunction(\n            function (array, ptr) {\n                return intf.af_get_data_ptr(ptr, helpers.getHandle(array));\n            });\n\n        // getType\n\n        lib.declare('int af_get_type(uint* outType, void* arr)');\n\n        af.getType = af._makeFunction(\n            function () {\n                this.outType = ref.alloc(ref.types.uint);\n            },\n            function (array) {\n                return intf.af_get_type(this.outType, helpers.getHandle(array));\n            },\n            function () {\n                return this.outType.deref();\n            });\n\n        af.getRefType = af._makeFunction(\n            function (array) {\n                return af.getType(array);\n            },\n            function (type) {\n                return af.dtypeToRefType(type);\n            });\n\n        // getNumdims\n\n        lib.declare('int af_get_numdims(uint* outNum, void* arr)');\n\n        af.getNumdims = af._makeFunction(\n            function () {\n                this.outNum = ref.alloc(ref.types.uint);\n            },\n            function (array) {\n                return intf.af_get_numdims(this.outNum, helpers.getHandle(array));\n            },\n            function () {\n                return this.outNum.deref();\n            });\n\n        // getElements\n\n        lib.declare('int af_get_elements(longlong* outElems, void* arr)');\n\n        af.getElements = af._makeFunction(\n            function () {\n                this.outElems = ref.alloc(ref.types.longlong);\n            },\n            function (array) {\n                return intf.af_get_elements(this.outElems, helpers.getHandle(array));\n            },\n            function () {\n                return this.outElems.deref();\n            });\n\n        // isEmpty\n\n        lib.declare('int af_is_empty(bool* outEmpty, void* arr)');\n\n        af.isEmpty = af._makeFunction(\n            function () {\n                this.outEmpty = ref.alloc(ref.types.bool);\n            },\n            function (array) {\n                return intf.af_is_empty(this.outEmpty, helpers.getHandle(array));\n            },\n            function () {\n                return this.outEmpty.deref();\n            });\n\n        // eval\n\n        let hasMultiEval = false;\n        let multiEvalEmu = null;\n        lib.declare('int af_eval(void* arr)');\n        if (lib.isSymbolExists('af_eval_multiple')) {\n            lib.declare('int af_eval_multiple(int num, PointerArray arrays)');\n            hasMultiEval = true;\n        }\n        else {\n            multiEvalEmu = async(function* (arrays, len) {\n                for (let i = 0; i < len; i++) {\n                    const res = yield intf.af_eval(helpers.getHandle(arr[i]));\n                    if (res > 0) {\n                        return res;\n                    }\n                }\n                return 0;\n            });\n        }\n\n        af.eval = af._makeFunction(\n            function () {\n                this.pointers = new lib.arrays.PointerArray(10);\n            },\n            function (arr) {\n                if (_.isArray(arr)) {\n                    len = Math.min(10, arr.length);\n                    if (!len) {\n                        return 0;\n                    }\n                    if (hasMultiEval) {\n                        for (let i = 0; i < len; i++) {\n                            this.pointers.set(i, helpers.getHandle(arr[i]));\n                        }\n                        return intf.af_eval_multiple(len, this.pointers);\n                    }\n                    else if (af.options.async) {\n                        return multiEvalEmu(arr, len);\n                    }\n                    else {\n                        for (let i = 0; i < len; i++) {\n                            const res = intf.af_eval(helpers.getHandle(arr[i]));\n                            if (res > 0) {\n                                return res;\n                            }\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    return intf.af_eval(helpers.getHandle(arr));\n                }\n            });\n\n        // index + assign\n\n        arrayIndexing(af, AFArray);\n    }\n\n    constructor(af, handle) {\n        super(() => af.releaseArray(handle));\n\n        this.af = af;\n        this.handle = handle;\n        this._hostArrayType = null;\n        this._host = this._makeHost();\n        this._get = this._makeGet();\n    }\n\n    type() {\n        return this.af.getType(this);\n    }\n\n    refType() {\n        return this.af.getRefType(this);\n    }\n\n    dims(n) {\n        return this.af.getDims(this, n);\n    }\n\n    host(ptr) {\n        return this._host(ptr);\n    }\n\n    numdims() {\n        return this.getNumdims(this);\n    }\n\n    elements() {\n        return this.af.getElements(this);\n    }\n\n    isempty() {\n        return this.af.isEmpty(this);\n    }\n\n    eval() {\n        return this.af.eval(this);\n    }\n\n    get() {\n        return this._get.apply(this, arguments);\n    }\n\n    set(...args) {\n        const self = this;\n        const af = this.af;\n        if (af.options.async) {\n            return async(function* (rhs) {\n                const newHandle = yield af.assign(self, rhs, ...args);\n                self.dispose();\n                self.resetDisposable(() => af.releaseArray(newHandle));\n                self.handle = newHandle;\n            });\n        }\n        return rhs => {\n            const newHandle = af.assign(self, rhs, ...args);\n            self.dispose();\n            self.resetDisposable(() => af.releaseArray(newHandle));\n            self.handle = newHandle;\n        };\n    }\n\n    _makeHost() {\n        const self = this;\n        const af = this.af;\n        if (af.options.async) {\n            return async(function* (ptr) {\n                if (!ptr) {\n                    const HostArray = self._hostArrayType || (self._hostArrayType = new ArrayType(yield self.refType()));\n                    ptr = new HostArray(yield self.elements()).buffer;\n                }\n                assert(Buffer.isBuffer(ptr), 'Argument \"ptr\" is not a Buffer.');\n                yield af.getDataPtr(self, ptr);\n                return ptr;\n            });\n        }\n        return function (ptr) {\n            if (!ptr) {\n                const HostArray = self._hostArrayType || (self._hostArrayType = new ArrayType(self.refType()));\n                ptr = new HostArray(self.elements()).buffer;\n            }\n            assert(Buffer.isBuffer(ptr), 'Argument \"ptr\" is not a Buffer.');\n            af.getDataPtr(self, ptr);\n            return ptr;\n        };\n    }\n\n    _makeGet() {\n        const self = this;\n        const af = this.af;\n        if (af.options.async) {\n            return async(function* () {\n                const newHandle = yield af.index(self, ...arguments);\n                return new AFArray(newHandle);\n            });\n        }\n        return function () {\n            const newHandle = af.index(self, ...arguments);\n            return new AFArray(newHandle);\n        };\n    }\n}\n\nmodule.exports = AFArray;"]}